<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminUserFiltersImagesByTypeTest">
        <annotations>
            <stories value="Cover scenario: User filters images by type"/>
            <title value="Admin should be able to filters images by type"/>
            <description value="Admin should be able to filters images by type"/>
            <severity value="CRITICAL"/>
            <group value="AdobeStockIntegration"/>
        </annotations>
        <before>
            <actionGroup ref="AdminAdobeStockSetConfigActionGroup" stepKey="setCorrectModuleConfig"/>
            <actionGroup ref="LoginActionGroup" stepKey="loginGetFromGeneralFile"/>
        </before>
        <after>
            <actionGroup ref="resetAdminDataGridToDefaultView" stepKey="resetAdminDataGridToDefaultView"/>
            <amOnPage url="admin/admin/auth/logout/" stepKey="amOnLogoutPage"/>
            <actionGroup ref="AdminAdobeStockSetConfigActionGroup" stepKey="cleanModuleConfig">
                <argument name="enabled" value="0"/>
                <argument name="wysiwygEnabled" value="disabled"/>
<!--                TODO: uncomment next lines where issue with sensitive config setting will be resolved. -->
<!--                <argument name="apiKey" value=""/>-->
<!--                <argument name="privateKey" value=""/>-->
            </actionGroup>
        </after>
        <actionGroup ref="AdminAdobeStockOpenSearchModalActionGroup" stepKey="openAdobeStockPopup"/>
        <grabAttributeFrom selector="{{AdobeStockSection.firstImageAfterSearch}}" userInput="src"
                           stepKey="getUrlWithoutFilters"/>
        <click selector="{{AdobeStockFilterSection.filters}}" stepKey="expandFilters"/>
        <waitForPageLoad stepKey="waitForFiltersOpen"/>
        <actionGroup ref="AssertIsVisibleAdobeStockFilterElementActionGroup" stepKey="checkPriceFilter">
            <argument name="filterName" value="Subcategory"/>
        </actionGroup>
        <actionGroup ref="AdminFilterResultsActionGroup" stepKey="setPriceFilterToPremium">
            <argument name="type" value="Photo"/>
            <argument name="filter" value="{{AdobeStockFilterSection.filterByType}}"/>
            <argument name="filterOption" value="content_type_filter"/>
        </actionGroup>
        <dontSeeElement selector="{{AdobeStockSection.imageSrc($getUrlWithoutFilters)}}" stepKey="assertImagesUpdated"/>
        <actionGroup ref="AssertsFilterResultsActionGroup" stepKey="verifyAppliedFilter">
            <argument name="resultValue" value="Photo"/>
        </actionGroup>
    </test>
</tests>
